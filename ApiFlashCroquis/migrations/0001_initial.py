# Generated by Django 5.2.6 on 2025-09-16 16:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Layer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("qgis_layer_id", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                (
                    "layer_type",
                    models.CharField(
                        choices=[
                            ("vector", "Vector"),
                            ("raster", "Raster"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "geometry_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("point", "Point"),
                            ("line", "Line"),
                            ("polygon", "Polygon"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "source_file",
                    models.FileField(blank=True, null=True, upload_to="layers/"),
                ),
                ("source_url", models.URLField(blank=True, null=True)),
                ("crs", models.CharField(blank=True, max_length=50, null=True)),
                ("feature_count", models.IntegerField(default=0)),
                ("extent", models.JSONField(blank=True, default=dict)),
                ("is_visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "layers",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="LayerStyle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol_color", models.CharField(default="#FF0000", max_length=7)),
                ("symbol_size", models.FloatField(default=10.0)),
                ("symbol_style", models.CharField(default="circle", max_length=50)),
                ("line_width", models.FloatField(default=1.0)),
                ("fill_color", models.CharField(blank=True, max_length=7, null=True)),
                ("opacity", models.FloatField(default=1.0)),
                ("show_labels", models.BooleanField(default=False)),
                (
                    "label_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("label_color", models.CharField(default="#000000", max_length=7)),
                ("label_size", models.IntegerField(default=10)),
                ("label_offset_x", models.IntegerField(default=0)),
                ("label_offset_y", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "layer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="style",
                        to="ApiFlashCroquis.layer",
                    ),
                ),
            ],
            options={
                "db_table": "layer_styles",
            },
        ),
        migrations.CreateModel(
            name="ProjectSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(default="Nouveau Projet", max_length=255)),
                ("crs", models.CharField(default="EPSG:4326", max_length=50)),
                (
                    "project_file",
                    models.FileField(blank=True, null=True, upload_to="projects/"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "project_sessions",
                "ordering": ["-last_accessed"],
            },
        ),
        migrations.CreateModel(
            name="ProcessingJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("algorithm_name", models.CharField(max_length=255)),
                ("parameters", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("result", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processing_jobs",
                        to="ApiFlashCroquis.projectsession",
                    ),
                ),
            ],
            options={
                "db_table": "processing_jobs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Parcelle",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("nom", models.CharField(max_length=255)),
                ("superficie", models.FloatField()),
                (
                    "proprietaire",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "localisation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("adresse", models.TextField(blank=True, null=True)),
                ("geometry", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("en_cours", "En cours"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "layer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ApiFlashCroquis.layer",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parcelles",
                        to="ApiFlashCroquis.projectsession",
                    ),
                ),
            ],
            options={
                "db_table": "parcelles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MapRender",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("width", models.IntegerField(default=800)),
                ("height", models.IntegerField(default=600)),
                ("dpi", models.IntegerField(default=96)),
                (
                    "format_output",
                    models.CharField(
                        choices=[("png", "PNG"), ("jpg", "JPEG")],
                        default="png",
                        max_length=10,
                    ),
                ),
                ("quality", models.IntegerField(default=90)),
                (
                    "background_color",
                    models.CharField(default="transparent", max_length=20),
                ),
                ("bbox", models.CharField(blank=True, max_length=255, null=True)),
                ("scale", models.FloatField(blank=True, null=True)),
                ("show_grid", models.BooleanField(default=False)),
                ("grid_config", models.JSONField(blank=True, default=dict)),
                ("render_config", models.JSONField(blank=True, default=dict)),
                (
                    "image_file",
                    models.ImageField(blank=True, null=True, upload_to="renders/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="map_renders",
                        to="ApiFlashCroquis.projectsession",
                    ),
                ),
            ],
            options={
                "db_table": "map_renders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="layer",
            name="session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="layers",
                to="ApiFlashCroquis.projectsession",
            ),
        ),
        migrations.CreateModel(
            name="GeneratedFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("png", "PNG"),
                            ("jpg", "JPEG"),
                            ("qgs", "QGIS Project"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file_path", models.FileField(upload_to="generated/")),
                ("size_bytes", models.BigIntegerField(default=0)),
                ("generation_config", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_files",
                        to="ApiFlashCroquis.projectsession",
                    ),
                ),
            ],
            options={
                "db_table": "generated_files",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QRCodeScan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("raw_data", models.TextField()),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("parcelle", "Parcelle"),
                            ("document", "Document"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "validity",
                    models.CharField(
                        choices=[
                            ("valid", "Valid"),
                            ("questionable", "Questionable"),
                            ("invalid", "Invalid"),
                        ],
                        default="valid",
                        max_length=20,
                    ),
                ),
                ("processed_data", models.JSONField(blank=True, default=dict)),
                ("scanned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ApiFlashCroquis.projectsession",
                    ),
                ),
            ],
            options={
                "db_table": "qr_scans",
                "ordering": ["-scanned_at"],
            },
        ),
        migrations.CreateModel(
            name="PointSommet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom_borne", models.CharField(max_length=10)),
                ("x", models.FloatField()),
                ("y", models.FloatField()),
                ("distance", models.FloatField(default=0.0)),
                ("ordre", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "parcelle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="points_sommets",
                        to="ApiFlashCroquis.parcelle",
                    ),
                ),
            ],
            options={
                "db_table": "points_sommets",
                "ordering": ["parcelle", "ordre"],
                "unique_together": {("parcelle", "ordre")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="layer",
            unique_together={("session", "qgis_layer_id")},
        ),
    ]
